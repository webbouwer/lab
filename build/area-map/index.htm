<!DOCTYPE html>
<html>
<head>

<!-- HTML meta -->
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="viewport" content="initial-scale=1.0, width=device-width" />

<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<!-- HTML doc title -->
<title>Interactieve kaart</title>

<!-- meta tags -->
<meta name="description" content="Interactieve kaart voor Midden Holland en Haaglanden Nederland - Interactive map area's in the Netherlands">
<meta name="author" content="Webbouwer">
<meta name="keywords" content="kaart, canvas, interactieve kaart, gebieden, map, javascript">

<!-- jQuery and/or other libraries -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://www.stichtingidb.nl/kaart/areadata.js"></script>


<!-- Custom
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/4.1.4/imagesloaded.min.js"></script>
<link rel="stylesheet" href="elements.css" />
 -->

</head>
<body>




<!-- content display -->
<div id="pagecontainer">

<!-- variable content -->
<div id="introtext">
<h1>Interactieve kaart</h1>
<p>Interactieve kaart voor Midden Holland en Haaglanden Nederland</p>
<p>De kaart is gemaakt voor <a href="https://www.stichtingidb.nl/" target="_blank">stichtingidb.nl</a> (<a href="https://www.stichtingidb.nl/kaart" target="_blank">stichtingidb.nl/kaart</a>), original code <a href="https://jsfiddle.net/webbouwer/f1ay6ewo/3/" target="_blank">@jsfiddle</a></p>
</div>

<div id="codebox"></div>
<div class="outermargin">

	 <div id="mapinfobox">Selecteer een gebied</div>
<div id="mapsection">
 <canvas id="mapcanvas"></canvas>
</div>
</div>

</div>

<style>
body
{
margin:0;
padding:0;
}

.outermargin
{
	width:100%;
	max-width:1200px;
	margin:0px auto;
}


#mapsection
{
	position:relative;
	width:760px;
	margin:0px auto;
	/*background-color: #cecece;*/

}

#pagecontainer
{
padding:20px 40px;
}

#mapcanvas
{
	position: relative;
	/*background-color:#efefef;*/
}
#codebox
{
	position:fixed;
	z-index:999;
}
#mapinfobox
{
	position:absolute;
	left:40px;
	top:210px;
	width:24%;
	z-index:999;
	border:1px solid #343434;
	border-radius:3px;
	padding:15px 20px;
	background-color:#efefef;
	font-family:"Arial", verdana, helvetica;
	font-size:0.9em;
}
.copyright
{
	position:relative;
	text-align:right;
	font-family:"Arial", verdana, helvetica;
	font-size:0.56em;
}

</style>
<script>



/*
author: webbouwer.org
source: https://jsfiddle.net/webbouwer/f21ebmh3/20/

*/


//

$(document).ready(function() {

	var container = document.querySelector('#mapsection');
	var canvas = document.querySelector('#mapcanvas');
  canvas.width = data.map.width;
  canvas.height = data.map.height;

	var context = canvas.getContext('2d');
  var rect = canvas.getBoundingClientRect();
  // https://dirask.com/posts/JavaScript-fill-polygon-on-canvas-element-in-HTML5-with-certain-color-yjQW5D



  function fillPolygon(title = 'example', points, color) {

    if (points.length > 0) {

      context.fillStyle = color; // all css colors are accepted by this property
			context.shadowColor = "black";
			context.shadowOffsetX = 0;
			context.shadowOffsetY = 0;
			context.shadowBlur = 0;

      var point = points[0];
      context.beginPath();
      context.moveTo(point.x, point.y); // point 1

      for (var i = 0; i < points.length; ++i) {

        point = points[i];
        context.lineTo(point.x, point.y);

      }
      context.closePath(); // go back to point 1
			context.fill();

    }
  }

  function placeText(title = 'example', area, textcolor) {


    if (area.length > 0) {


      let a = {
        x: rect.width,
        y: rect.height
      };
      let b = {
        x: rect.left - (rect.width/2), // because using onscreen position ?
        y: rect.top  // - canvas.offsetTop
      };

      for (var i = 1; i < area.length; ++i) {

        point = area[i];
        // calc boundingbox
        if (point.x < a.x) a.x = point.x;
        if (point.y < a.y) a.y = point.y;
        if (point.x > b.x) b.x = point.x;
        if (point.y > b.y) b.y = point.y;

      }

      // calc boundingbox center
      let c = {
        x: parseInt( a.x + (b.x - a.x) / 2 ),
        y: parseInt( a.y + (b.y - a.y) / 2 )
      };

      var text = canvas.getContext('2d');
      //text.globalCompositeOperation='source-over';
      text.fillStyle = textcolor; // font color to write the text with
			text.shadowColor = "#232323";
			text.shadowOffsetX = 2;
			text.shadowOffsetY = 2;
			text.shadowBlur = 9;
      text.font = "normal 14px Arial";
      text.textBaseline = "top";


			var x = c.x - text.measureText(title).width/2; // - canvas.offsetLeft;
			var y = c.y - 10; // - 10; // - canvas.offsetTop;
			// custom placement
			if( title == 'Katwijk' || title == 'Leiderdorp' || title == 'Pijnacker-Nootdorp' ){
				y = c.y - 20;
			}

			text.fillText(title, x, y);


      //console.log(title + ',' + x + ',' + y);

    }
  }

	function newcolor(m, s, c) {
		return s[m.floor(m.random() * s.length)] + (c && newcolor(m, s, c - 1));
	};

  // each polygon dataset
  $.each(data.regions, function(idx, obj) {

		var randomColor;
		if( data.regions[idx].color ){
			var randomColor = data.regions[idx].color;
		}else{
    	var randomColor = newcolor(Math, '789DE', 4);
			data.regions[idx].color = '#'+randomColor;
		}
		drawArea( obj );
    //fillPolygon(obj.name, obj.points, '#' + randomColor);

  });

	$.each(data.regions, function(idx, obj) {
		drawAreaTitles( obj );
	});



	function isPointInPoly(poly, pt){
  for (var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i)
  ((poly[i].y <= pt.y && pt.y < poly[j].y) || (poly[j].y <= pt.y && pt.y < poly[i].y))
  && (pt.x < (poly[j].x - poly[i].x) * (pt.y - poly[i].y) / (poly[j].y - poly[i].y) + poly[i].x)
  && (c = !c);
  return c;
}

function drawArea( area, ms=false ){
	if(ms){
		if( isPointInPoly(area.points, ms) ){
			fillPolygon(title = 'example', area.points, area.color); // #550D83
		}else{
			fillPolygon(title = 'example', area.points, '#cccccc' ); // area.color
		}
	}else{
		fillPolygon(title = 'example', area.points, '#cccccc' ); // area.color
	}

}

function drawAreaTitles( area, ms=false ){
	let active = false;
	if(ms){
		if( isPointInPoly(area.points, ms) ){
			placeText(area.name, area.points, '#ffffff'); //#ffffff
			active = true;
			//$('#mapcanvas').css('cursor','pointer');
		}else{
			placeText(area.name, area.points, '#0d0d0d'); // #0d0d0d
			//$('#mapcanvas').css('cursor','auto');
		}
	}else{
		placeText(area.name, area.points, '#0d0d0d'); // #0d0d0d
	}
	return active;
}

function checkAreaActive( area, ms=false ){
	if(ms){
		if( isPointInPoly(area.points, ms) ){
			//placeText(area.name, area.points, '#ffffff'); //#ffffff
			let t = '<h3>'+area.name+'</h3>';
			t += '<p>De gemeente richt zich met name op gezamenlijke activiteiten ter bevorderen van non-discriminatie en inclusie op het gebied van: <strong>'+area.desc+'</strong></p>';
			//t += '<p>'+area.address+'</p>';
			//t += '<p>'+area.postcode+' '+area.city+'</p>';
			//t += '<p>E: '+area.email+'</p>';
			//t += '<p>T: '+area.tel+'</p>';
			if( area.platform && area.platform != '' ){
				t += '<p><strong>Bezoek het <a href="'+area.platform+'" target="_blank">platform</a></strong></p>';
			}
			t += '<p>Ga naar de gemeente <a href="'+area.link+'" target="_blank">website</a></p>';
				$('#mapinfobox').html( t );
		}
	}else{
		//placeText(area.name, area.points, '#0d0d0d'); // #0d0d0d
	}
}

	canvas.onmousemove = function(e) {

		// tell the browser we're handling this event
		  e.preventDefault();
		  e.stopPropagation();
		  // mouse position
		  mouseX=parseInt(e.clientX+window.pageXOffset-container.offsetLeft);
		  mouseY=parseInt(e.clientY+window.pageYOffset-container.offsetTop);

			/*
			let cnt = 'x='+mouseX;
			cnt += ', y='+mouseY;
			cnt += '<br /> posx='+window.pageXOffset;
			cnt += ', posy='+window.pageYOffset;
			cnt += '<br /> offsetx='+container.offsetLeft;
			cnt += ', offsety='+container.offsetTop;
			$('#codebox').html( cnt );
			*/

			let pt = { 'x':mouseX, 'y':mouseY};
			var cur = false;
			var slc = false;
			context.clearRect(0, 0, canvas.width, canvas.height);
			$.each(data.regions, function(idx, area) {
				drawArea( area, pt );
			});

			$('#mapcanvas').css('cursor','auto');
			$.each(data.regions, function(idx, area) {
				let a = drawAreaTitles( area, pt );
				if(a){
					$('#mapcanvas').css('cursor','pointer');
				}
			});

	}

	canvas.onmousedown = function(e) {

		e.preventDefault();
		e.stopPropagation();
		// mouse position
		mouseX=parseInt(e.clientX+window.pageXOffset-container.offsetLeft);
		mouseY=parseInt(e.clientY+window.pageYOffset-container.offsetTop);

		let pt = { 'x':mouseX, 'y':mouseY};
		var cur = false;
		var slc = false;
		context.clearRect(0, 0, canvas.width, canvas.height);
		$.each(data.regions, function(idx, area) {
			drawArea( area, pt );
		});
		$.each(data.regions, function(idx, area) {
			drawAreaTitles( area, pt );
			checkAreaActive( area, pt );
		});

	}




  //
	function onWindowResize(){
	}

	onWindowResize();
  window.addEventListener('resize', onWindowResize, false);


});

</script>



<!-- webbouwer infobar -->
<div id="infobar" style="position:fixed;top:0px;right:0px;">
	<a href="https://webbouwer.org"><img src="https://img.shields.io/badge/Webbouwer-Site-red.svg"/>
	<a href="https://github.com/webbouwer/"><img src="https://img.shields.io/badge/Webbouwer-github-black.svg"/>
	<a href="https://jsfiddle.net/user/webbouwer/fiddles/"><img src="https://img.shields.io/badge/Webbouwer-JSFiddle-blue.svg"/>
	<!--
  <a href="https://webbouwer.org" target="_blank">webbouwer.org</a>
  <a href="https://github.com/webbouwer?tab=repositories" title="Webbouwer @ github.com" target="_blank">Github.com</a>
  <a href="https://jsfiddle.net/user/webbouwer/fiddles/" title="Webbouwer @ JSFiddle.net" target="_blank">JSFiddle.net</a>
	-->
</div>


</body>
</html>
