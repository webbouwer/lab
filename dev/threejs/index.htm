<!DOCTYPE html>
<html>
<head>

<!-- HTML meta -->
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />

<meta name="viewport" content="initial-scale=1.0, width=device-width" />

<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

<!-- HTML doc title -->
<title>ThreeJS Boilerplate</title>

<!-- meta tags -->
<meta name="description" content="Basic HTML5 boilerplate v1 2022">
<meta name="author" content="Webbouwer">
<meta name="keywords" content="HTML5, HTML, boilerplate, template, html template, basic, basic html">

<!-- libraries -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/three@0.122.0/examples/js/controls/OrbitControls.min.js"></script>



<!-- Custom
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.imagesloaded/4.1.4/imagesloaded.min.js"></script>
<link rel="stylesheet" href="elements.css" />
 -->

<!-- Custom view/page style -->
<style>
body
{
margin:0;
padding:0;
}
#pagecontainer
{
  position:absolute;
  padding:2vh;
}
</style>

</head>
<body>

<!-- content display -->
<div id="pagecontainer">

<!-- variable content -->
<h1>ThreeJS Boilerplate</h1>

<p><a href="setup/" target="_self">Loading 3d objects</a> | <a href="game/test/" target="_self">Explore 3d object</a> | <a href="extrude2d/" target="_self">Extrude 2d shape</a> (<a href="https://jsfiddle.net/webbouwer/gtozx0fe/" target="_blank">JSFiddle</a>)</p>
<p>
Script depends on
<a href="https://cdnjs.com/libraries/jquery" target="_blank">jquery.min.js</a>,
  <a href="https://cdnjs.com/libraries/three.js" target="_blank">three.min.js</a>,
  <a href="https://www.jsdelivr.com/package/npm/three-orbitcontrols" target="_blank">OrbitControls.min.js</a>
</p>
<p>More info <a href="https://discoverthreejs.com/book/first-steps/load-models/" target="_blank">ThreeJS first-steps</a></p>
</div>

<script>


$(document).ready(function() {

// Simple three.js example

var mesh, renderer, scene, camera, controls;

init();
animate();

function init() {

    // renderer
    renderer = new THREE.WebGLRenderer();
    renderer.setSize( window.innerWidth, window.innerHeight );
    renderer.setClearColor( 0x889988 );
    document.body.appendChild( renderer.domElement );

    // scene
    scene = new THREE.Scene();

    // camera
    camera = new THREE.PerspectiveCamera( 40, window.innerWidth / window.innerHeight, 1, 1000 );
    camera.position.set( -10, 12, 20 );
    scene.add( camera ); // required, since adding light as child of camera


    // controls
    controls = new THREE.OrbitControls( camera, renderer.domElement );
    controls.enableZoom = false;
    controls.enablePan = false;
    controls.maxPolarAngle = Math.PI / 2;

    // ambient
    scene.add( new THREE.AmbientLight( 0x444444 ) );

    // light
    var light = new THREE.PointLight( 0xffffff, 0.8 );
    camera.add( light );

    // axes
    scene.add( new THREE.AxisHelper( 20 ) );

    // geometry
    var geometry = new THREE.BoxGeometry( 8, 4, 1 );

    // material
    var material1 = new THREE.MeshPhongMaterial( {
        color: 'sandybrown'
    } );

    // mesh
    mesh = new THREE.Mesh( geometry, material1 );
    mesh.position.set( 0, 0, 0 );
    scene.add( mesh );




}

function animate() {

    requestAnimationFrame( animate );

    //controls.update();

    renderer.render( scene, camera );

}

$(window).on('resize', function(){
  camera.updateProjectionMatrix();
  camera.position.set( -10, 12, 20 );
  renderer.setSize( window.innerWidth, window.innerHeight );
});

});
</script>

</body>
</html>
