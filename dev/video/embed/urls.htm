<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="user-scalable=no, width=device-width" />
  <title>Panda Me</title>

    <script type="text/javascript" src="https://pandame.nl/lib/jquery.min.js"></script>
    <script type="text/javascript" src="https://pandame.nl/lib/jquery-migrate.min.js"></script>

    <style>

    input#sourceurl{
      width:480px;
    }

    </style>
</head>

<body>

<div>
  <div>
    <input id="sourceurl" placeholder="Type or paste a weburl" />
  </div>
  <div id="infobox">
  </div>
</div>

<script>

jQuery(function ($) {

  $(document).ready(function(){ //$(window).load(function(){ //


    const inputElement = '#sourceurl';
    const extensionlist = ['com','org','net','nl','de','be','fr','it','uk','eu'];

    const currentProfile = {};

    const domainArchive = {
      'brandnewtube.com': {
        'domain_id' : 'brandnewtube',
        'domain_title' : 'Brand New Tube',
        'options' : {
          'watch' : 'Get video id',
          'embed' : 'Get video id',
        }
      },
      'youtube.com': {
        'domain_id' : 'youtube',
        'domain_title' : 'Youtube',
        'options' : {
          'watch' : 'Get video id',
          'embed' : 'Get video id',
        }
      }
    }

    function init()
    {
      var str = $(inputElement).val();
      validateString( str );
    }

    function infoboxContent( text = '', all = false ){
      if( all ){
        $('#infobox').html(text);
      }else{
        $('#infobox').append(text);
      }
    }

    function domainInfo( url, domain ){

      var text = '';
      infoboxContent( '', true );

      if( domainArchive[domain] && url.includes(domain) ){
        //console.log(domain);
        //console.log(url);
        text = domain +' known as '+ domainArchive[domain]['domain_title'];
      }else{
        text = domain +' not known';
      }
      infoboxContent( text, true );
    }

    function validateString(str){
      var xurl = chkHTTPS( str );
      if( isUrl(xurl) ){
        let domain = (new URL(xurl));
        domain = domain.hostname.replace('www.','');
        let extension = domain.split('.').reverse()[0].toLowerCase();
        if( isDomainExt(extension) ){
          domainInfo(xurl,domain);
        }else{
          //infoboxContent( xurl +' is not a valid domain', true );
          //console.log( xurl +' is not a valid domain' );
          var srch = xurl.replace( 'http://', '').replace( 'ftp://', '').replace( 'https://', '');
          var arr = Array.from(srch);

          var options = '<ul>';
          infoboxContent( options, true );

          $.each(domainArchive, function(key, d){

            var buildword = '';
            $.each(arr, function( i, letter){
              buildword += letter;
              //options += buildword +'<br />';
              if( key.includes(buildword) && !options.includes(key) )
              {
                options += '<li>https://' + key +'</li>';
              }
            });

          });
          options += '</ul>';
          infoboxContent( options, true );

        }
      }



    }

    function isUrl(s) {
      var regexp = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/
      return regexp.test(s);
    }

    function isDomainExt(e){
      if( jQuery.inArray( e, extensionlist) !== -1 ){
        return true;
      }
      return false;
    }

    function chkHTTPS(str){
      let url = str;
      let chk = str.substr(0,8);
      if( chk.includes("https://") ){
      }else if(chk.includes("http://")){
        url = 'https://'+str.replace('http://','');
      } else if(str != ''){
        str = delFirstStr( str, 'https:/');
        str = delFirstStr( str, 'https:');
        str = delFirstStr( str, 'https');
        str = delFirstStr( str, 'http');
        url = 'https://'+str;
      }
      return url;
    }

    function delFirstStr(str, searchstr)       {
    	var index = str.indexOf(searchstr);
    	if (index === -1) {
    		return str;
    	}
    	return str.slice(0, index) + str.slice(index + searchstr.length);
    }


    $('body').on( 'keyup', inputElement, function(event){

      if(event.preventDefault){
        event.preventDefault();
      }else{
        event.returnValue = false;
      }
      
      infoboxContent( '', true );
      var str = $(inputElement).val();
      validateString( str );

    });

/*

    function validURL(str) {

      var pattern = new RegExp('^((https?:)?\\/\\/)?'+ // protocol
        '(?:\\S+(?::\\S*)?@)?' + // authentication
        '((([a-z\\d]([a-z\\d-]*[a-z\\d])*)\\.)+[a-z]{2,}|'+ // domain name
        '((\\d{1,3}\\.){3}\\d{1,3}))'+ // OR ip (v4) address
        '(\\:\\d+)?(\\/[-a-z\\d%_.~+]*)*'+ // port and path
        '(\\?[;&a-z\\d%_.~+=-]*)?'+ // query string
        '(\\#[-a-z\\d_]*)?$','i'); // fragment locater

      return !!pattern.test(str);

    }

    function setSearchHints(){

      var xurl = $('#sourceurl').val();

      if( xurl.length < 1 ){

      }else{

        if( validURL(xurl) ){
          let domain = (new URL(xurl));
          domain = domain.hostname.replace('www.','');
          let search = domain.search;

          var extpatrn = new RegExp('/^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.((com)|(org)|(org)|(net)|(eu)|(co.uk)|(co.in)|(nl))$/');
          if(extpatrn.test(domain)){
            console.log(domain);
          }

        }

      }

    }
*/

  });
});

</script>

</body>

</html>
